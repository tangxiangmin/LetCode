/**
 * @param {number[][]} source
 * @param {number[][]} target
 * @return {number}
 */
// 跟virtual dom有点像，先复用，再修改
// 因此只需要统计两个矩阵中有多少不同的元素
// 每个无人机都是唯一的颜色
var minimumSwitchingTimes = function (source, target) {
    const map = new Array(10 ** 4 + 1).fill(0)
    const m = source.length
    const n = source[0].length
    for (let i = 0; i < m; ++i) {
        for (let j = 0; j < n; ++j) {
            const v1 = source[i][j]
            map[v1]++
            const v2 = target[i][j]
            map[v2]--
        }
    }
    let ans = 0
    for (const v of map) {
        // 不等于0则表示需要改动的元素
        ans += Math.abs(v)
    }
    // 从source 到target，因此除以2
    return ans / 2
};

var source = [[1, 3], [5, 4]], target = [[3, 1], [6, 5]]
source = [[1, 2, 3], [3, 4, 5]], target = [[1, 3, 5], [2, 3, 4]]
source = [[989, 498, 941, 850, 992, 367, 914, 224, 143, 144, 98, 819, 932, 723, 617, 151, 102, 76, 871, 339, 574, 363, 324, 656, 210, 566, 454, 534, 64, 941, 938, 96, 861, 728, 804, 641, 627, 848, 342, 748, 721, 65, 940, 228, 823, 146, 557, 94, 328, 521, 502, 309, 299, 128, 341, 945, 209, 819, 561, 295, 94, 818, 325, 248, 189, 842, 34, 673, 488, 92, 776, 898, 946, 863, 920, 946, 554, 401, 723, 283, 832, 870, 917, 604, 973, 594, 462, 677, 718, 813, 85, 628, 499, 646, 866, 249, 750, 120, 226, 814]], target = [[524, 415, 803, 311, 489, 598, 930, 517, 289, 774, 634, 257, 546, 830, 924, 318, 748, 921, 701, 484, 104, 445, 626, 935, 990, 489, 887, 267, 825, 562, 15, 737, 409, 845, 685, 2, 506, 889, 250, 334, 892, 196, 582, 245, 991, 823, 459, 83, 897, 956, 112, 565, 724, 561, 835, 554, 987, 618, 602, 456, 611, 395, 590, 298, 194, 192, 628, 267, 71, 696, 134, 154, 40, 83, 717, 850, 700, 858, 538, 535, 242, 221, 696, 846, 430, 282, 505, 657, 939, 366, 333, 119, 602, 344, 195, 17, 278, 723, 381, 175]]
var ans = minimumSwitchingTimes(source, target)
console.log(ans)